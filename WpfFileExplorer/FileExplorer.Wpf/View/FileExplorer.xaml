<UserControl x:Class="FileExplorer.Wpf.View.FileExplorer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:view="clr-namespace:FileExplorer.Wpf.View"
             xmlns:markupExtension="clr-namespace:BionicLibrary.Net.MarkupExtension;assembly=BionicLibrary.Net"
             xmlns:viewModel="clr-namespace:FileExplorer.Wpf.ViewModel"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300" AllowDrop="True" 
             view:FileDragDropAttachedBehavior.IsEnabled="{markupExtension:PrimitiveType Boolean=True}"

             UseLayoutRounding="True"
             ContextMenu="{DynamicResource ExplorerContextMenu}"
             x:Name="UserControl">
  <UserControl.DataContext>
    <viewModel:FileExplorerViewModel />
  </UserControl.DataContext>
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Styles/FileExplorerTreeViewStyle.xaml" />
        <ResourceDictionary Source="/View/Styles/FileExtensionFilterSplitButtonStyle.xaml" />
        <ResourceDictionary Source="/Resources/Styles/ApplicationColorResources.xaml" />
        <ResourceDictionary Source="/Resources/Styles/AppliactionImageResources.xaml" />
        <ResourceDictionary Source="/Resources/Styles/ApplicationStyleResources.xaml" />
        <ResourceDictionary Source="/Resources/Styles/ApplicationEffectResources.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Style TargetType="view:FileExplorer">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource SeparatorBrush}" />
        <Setter Property="Background" Value="{StaticResource WindowsControlBrush}" />
         <Setter Property="HasProgressReport" Value="{Binding Path=IsBusy, Mode=OneWay}" /> 
        <!--<Style.Triggers>
          <Trigger Property="IsVisible" Value="False">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="0,0,0,2" />
          </Trigger>
        </Style.Triggers>-->
      </Style>

      <Style TargetType="MenuItem">
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource IconForegroundBrush}" />
      </Style>

      <ContextMenu x:Key="TreeViewContextMenu" HasDropShadow="True">
        <ContextMenu.Resources>

          <Style TargetType="Viewbox">
            <Setter Property="Height" Value="18" />
            <Setter Property="Width" Value="18" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <!--<Setter Property="Foreground" Value="{StaticResource IconForegroundBrush}"/>-->
          </Style>
        </ContextMenu.Resources>

        <ContextMenu.CommandBindings>
          <CommandBinding Command="{x:Static view:FileExplorer.OpenDocumentInExternalEditorRoutedCommand}" Executed="ExecuteOpenFileInExternalEditor" CanExecute="CanExecuteOpenFileInExternalEditor" />
          <CommandBinding Command="{x:Static view:FileExplorer.ViewFileRoutedCommand}" Executed="ExecuteViewFile" CanExecute="CanExecuteViewFile" />
          <CommandBinding Command="{x:Static view:FileExplorer.AddNewFoldersRoutedCommand}" Executed="ExecuteAddNewFolders" CanExecute="CanExecuteAddNewFolders" />
          <CommandBinding Command="{x:Static view:FileExplorer.AddNewFilesRoutedCommand}" Executed="ExecuteAddNewFiles" CanExecute="CanExecuteAddNewFiles" />
          <CommandBinding Command="{x:Static view:FileExplorer.ClearTreeViewRoutedCommand}" Executed="ExecuteClearTreeView" CanExecute="CanExecuteClearTreeView" />
        </ContextMenu.CommandBindings>

        <MenuItem Header="Open Folders" Command="{x:Static view:FileExplorer.AddNewFoldersRoutedCommand}" Icon="{DynamicResource FolderOpenedIcon}" />
        <MenuItem Header="Open Files" Command="{x:Static view:FileExplorer.AddNewFilesRoutedCommand}" Icon="{DynamicResource FileIcon}" />
        <MenuItem InputGestureText="Alt+C" Header="Clear Explorer" Command="{x:Static view:FileExplorer.ClearTreeViewRoutedCommand}" Icon="{DynamicResource DeleteIcon}" />
        <Separator Height="1"
                   Margin="3,3"
                   Background="{StaticResource SeparatorBrush}" />
        <MenuItem Header="Open File External" CommandParameter="{Binding ElementName=ExplorerTreeView, Path=SelectedItem}" Command="{x:Static view:FileExplorer.OpenDocumentInExternalEditorRoutedCommand}" Icon="{DynamicResource EditFileIcon}" />

      </ContextMenu>
      <ContextMenu x:Key="ExplorerContextMenu" HasDropShadow="True" HorizontalAlignment="Left">
        <ContextMenu.Resources>

          <Style TargetType="Viewbox">
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <!--<Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>-->
            <!--<Setter Property="Foreground" Value="{StaticResource IconForegroundBrush}"/>-->
          </Style>
        </ContextMenu.Resources>

        <ContextMenu.CommandBindings>
          <CommandBinding Command="{x:Static view:FileExplorer.OpenDocumentInExternalEditorRoutedCommand}" Executed="ExecuteOpenFileInExternalEditor" CanExecute="CanExecuteOpenFileInExternalEditor" />
          <CommandBinding Command="{x:Static view:FileExplorer.ViewFileRoutedCommand}" Executed="ExecuteViewFile" CanExecute="CanExecuteViewFile" />
          <CommandBinding Command="{x:Static view:FileExplorer.AddNewFoldersRoutedCommand}" Executed="ExecuteAddNewFolders" CanExecute="CanExecuteAddNewFolders" />
          <CommandBinding Command="{x:Static view:FileExplorer.AddNewFilesRoutedCommand}" Executed="ExecuteAddNewFiles" CanExecute="CanExecuteAddNewFiles" />
          <CommandBinding Command="{x:Static view:FileExplorer.ClearTreeViewRoutedCommand}" Executed="ExecuteClearTreeView" CanExecute="CanExecuteClearTreeView" />
        </ContextMenu.CommandBindings>

        <MenuItem Header="Open Folders" Command="{x:Static view:FileExplorer.AddNewFoldersRoutedCommand}" Icon="{DynamicResource FolderOpenedIcon}" />
        <MenuItem Header="Open Files" Command="{x:Static view:FileExplorer.AddNewFilesRoutedCommand}" Icon="{DynamicResource FileIcon}" />
        <MenuItem Header="Clear Explorer" Command="{x:Static view:FileExplorer.ClearTreeViewRoutedCommand}" Icon="{DynamicResource DeleteIcon}" />
        <Separator Margin="3,3"
                   Background="{StaticResource SeparatorBrush}" />
        <MenuItem Header="Open File External" CommandParameter="{Binding ElementName=ExplorerTreeView, Path=SelectedItem}" Command="{x:Static view:FileExplorer.OpenDocumentInExternalEditorRoutedCommand}" Foreground="{StaticResource IconForegroundBrush}" Icon="{DynamicResource EditFileIcon}" />

      </ContextMenu>

      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </ResourceDictionary>
  </UserControl.Resources>

  <UserControl.Template>
    <ControlTemplate TargetType="view:FileExplorer">
      <Grid x:Name="RootGrid">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition x:Name="ExplorerTreeViewRow"
                         Height="*" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0"
                BorderThickness="0"
                BorderBrush="{DynamicResource IconForegroundBrush}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="ToolsRow" />
              <RowDefinition x:Name="ProgressRow" />
            </Grid.RowDefinitions>
            <ToolBarTray Grid.Row="0"
                         HorizontalAlignment="Stretch">
              <ToolBar HorizontalAlignment="Stretch"
                       Band="0"
                       Margin="5,0"
                       MinHeight="24"
                       Width="{Binding ElementName=RootGrid, Path=ActualWidth}">
                <ToolBar.CommandBindings>

                  <CommandBinding Command="{x:Static view:FileExplorer.AddNewFoldersRoutedCommand}"
                                  Executed="ExecuteAddNewFolders"
                                  CanExecute="CanExecuteAddNewFolders" />
                  <CommandBinding Command="{x:Static view:FileExplorer.AddNewFilesRoutedCommand}"
                                  Executed="ExecuteAddNewFiles"
                                  CanExecute="CanExecuteAddNewFiles" />
                  <CommandBinding Command="{x:Static view:FileExplorer.ClearTreeViewRoutedCommand}"
                                  Executed="ExecuteClearTreeView"
                                  CanExecute="CanExecuteClearTreeView" />
                </ToolBar.CommandBindings>
                <Button Content="{StaticResource FolderOpenedIcon}"
                        Style="{StaticResource ToolIconButtonStyle}"
                        IsEnabled="True"
                        ToolTip="Add new folders"
                        Padding="5"
                        Command="{x:Static view:FileExplorer.AddNewFoldersRoutedCommand}"
                        Margin="10,0" />
                <Button Content="{StaticResource FileIcon}"
                        Style="{StaticResource ToolIconButtonStyle}"
                        ToolTip="Add new files"
                        Padding="8,7"
                        Command="{x:Static view:FileExplorer.AddNewFilesRoutedCommand}"
                        Margin="2,0" />
                <Button Content="{StaticResource DeleteIcon}"
                        ToolTip="Clear all files and folders"
                        Command="{x:Static view:FileExplorer.ClearTreeViewRoutedCommand}"
                        Style="{StaticResource ToolIconButtonStyle}"
                        Margin="10,0,0,0" />

                <xctk:SplitButton Content="{StaticResource FilterIcon}"
                                  Margin="15,0,10,0"
                                  Height="14" 
                                  VerticalAlignment="Center" Foreground="{StaticResource TextBrush}">
                  <xctk:SplitButton.Resources>

                    <Style x:Key="SyncSelectorMenuItemStyle"
                           TargetType="ToggleButton"
                           BasedOn="{StaticResource ToolIconToggleButtonStyle}">
                      <Setter Property="Focusable"
                              Value="False" />
                      <Setter Property="IsThreeState"
                              Value="False" />
                      <Setter Property="ClickMode"
                              Value="Press" />
                      <Setter Property="Foreground"
                              Value="{StaticResource TextBrush}" />
                      <Setter Property="VerticalAlignment"
                              Value="Stretch" />
                      <Setter Property="HorizontalAlignment"
                              Value="Stretch" />
                      <Setter Property="HorizontalContentAlignment"
                              Value="Left" />
                      <Setter Property="Padding"
                              Value="8,0" />
                      <Setter Property="Width"
                              Value="270" />
                      <Setter Property="Height"
                              Value="30" />
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="ToggleButton">
                            <Border BorderBrush="{TemplateBinding Foreground}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}" >
                              <Grid Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}">
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition Width="Auto" />
                                  <ColumnDefinition Width="Auto" />
                                  <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0"
                                        Width="13"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding Foreground}"
                                        Height="13"
                                        Padding="0"
                                        BorderThickness="1">

                                  <Path x:Name="CheckMark"
                                        Width="7"
                                        Height="7"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter={markupExtension:PrimitiveType Boolean=True}, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        StrokeThickness="2"
                                        Stroke="{TemplateBinding Foreground}"
                                        Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                </Border>

                                <Separator Grid.Column="1"
                                           Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                           Width="1"
                                           VerticalAlignment="Stretch"
                                           HorizontalAlignment="Left"
                                           Background="{StaticResource SeparatorBrush}"
                                           Margin="6,0" />

                                <TextBlock Grid.Column="2"
                                           Text="{TemplateBinding Content}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="12"
                                           FontStretch="UltraExpanded"
                                           FontWeight="Normal"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Stretch" />
                              </Grid>
                            </Border>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                      <Style.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                          <Setter Property="Foreground"
                                  Value="{StaticResource TextBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                          <Setter Property="Foreground"
                                  Value="{StaticResource TextBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                          <Setter Property="Background"
                                  Value="{StaticResource SelectedItemHighLightBrush}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </xctk:SplitButton.Resources>
                  <xctk:SplitButton.DropDownContent>
                    <StackPanel>

                      <ToggleButton Content="All Files"
                                    IsChecked="{Binding IsShowingAnyFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding FilterFilesByDefaultExtensionsCommand}"
                                    Style="{StaticResource SyncSelectorMenuItemStyle}"
                                    HorizontalAlignment="Left" />
                      <ToggleButton Content="Archive Files"
                                    IsChecked="{Binding IsShowingArchiveFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding FilterFilesByDefaultExtensionsCommand}"
                                    Style="{StaticResource SyncSelectorMenuItemStyle}"
                                    HorizontalAlignment="Left" />
                      <ToggleButton Content="Log Files"
                                    IsChecked="{Binding IsShowingLogFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding FilterFilesByDefaultExtensionsCommand}"
                                    Style="{StaticResource SyncSelectorMenuItemStyle}"
                                    HorizontalAlignment="Left" />
                      <ToggleButton Content="Text Files"
                                    IsChecked="{Binding IsShowingTxtFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding FilterFilesByDefaultExtensionsCommand}"
                                    Style="{StaticResource SyncSelectorMenuItemStyle}"
                                    HorizontalAlignment="Left" />
                      <ToggleButton Content="Ini Files"
                                    IsChecked="{Binding IsShowingIniFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding FilterFilesByDefaultExtensionsCommand}"
                                    Style="{StaticResource SyncSelectorMenuItemStyle}"
                                    HorizontalAlignment="Left" />

                      <Separator Margin="5"
                                 Background="{StaticResource SeparatorBrush}" />

                      <ToggleButton Content="Enable Custom Filters"
                                    IsChecked="{Binding IsFilteringFileSystemTreeByCustomExtensions, Mode=TwoWay}"
                                    Style="{StaticResource SyncSelectorMenuItemStyle}"
                                    HorizontalAlignment="Left" />

                      <StackPanel x:Name="CustomFilterTextBoxPanel"
                                  Orientation="Vertical"
                                  Margin="5"
                                  MaxHeight="0">
                        <TextBlock Style="{StaticResource HintTextBlockStyle}"
                                   Text="Separate extensions with a semicolon (e.g. 'txt;.log;zip' or '*' to include. When using wildcard '*' all other specified extensions will be excluded."  />

                        <StackPanel Orientation="Horizontal"
                                    Margin="5">
                          <TextBox Style="{StaticResource {x:Type TextBoxBase}}"
                                   view:TextBoxFocusAttachedBehavior.AutoSelectText="True"
                                   Text="{Binding FileFilterExtensions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center"
                                   Width="200"
                                   TextWrapping="NoWrap" Margin="0,0,5,0" />
                          <Button Content="{StaticResource SynchronizeCircularArrows}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  Focusable="False"
                                  Command="{Binding FilterFilesByCustomExtensionsCommand}"
                                  Width="16" />
                        </StackPanel>
                      </StackPanel>
                    </StackPanel>
                  </xctk:SplitButton.DropDownContent>

                </xctk:SplitButton>
              </ToolBar>
            </ToolBarTray>

            <Separator Grid.Row="1"
                       Background="{StaticResource SeparatorBrush}"
                       Margin="5,0,5,0"
                       Height="1"
                       VerticalAlignment="Center" />

            <ProgressBar x:Name="ProgressBar"
                         Grid.Row="1"
                         Panel.ZIndex="1"
                         Visibility="{Binding ElementName=UserControl, Path=HasProgressReport, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter={markupExtension:PrimitiveType Boolean=True}}"
                         Margin="0,0,0,0" />
          </Grid>
        </Border>

        <TreeView x:Name="PART_ExplorerTreeView"
                  ItemsSource="{Binding VirtualExplorerRootDirectory.ChildFileSystemTreeElements}"
                  Style="{StaticResource FileExplorerTreeViewStyle}"
                  Grid.Row="1"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto">
          <TreeView.CommandBindings>
            <CommandBinding Command="{x:Static view:FileExplorer.ViewFileRoutedCommand}"
                            Executed="ExecuteViewFile"
                            CanExecute="CanExecuteViewFile" />
            <CommandBinding Command="{x:Static view:FileExplorer.AddNewFoldersRoutedCommand}"
                            Executed="ExecuteAddNewFolders"
                            CanExecute="CanExecuteAddNewFolders" />
            <CommandBinding Command="{x:Static view:FileExplorer.AddNewFilesRoutedCommand}"
                            Executed="ExecuteAddNewFiles"
                            CanExecute="CanExecuteAddNewFiles" />
            <CommandBinding Command="{x:Static view:FileExplorer.ClearTreeViewRoutedCommand}"
                            Executed="ExecuteClearTreeView"
                            CanExecute="CanExecuteClearTreeView" />
          </TreeView.CommandBindings>
        </TreeView>
      </Grid>

      <ControlTemplate.Triggers>
        <DataTrigger Binding="{Binding IsFilteringFileSystemTreeByCustomExtensions}"
                     Value="True">
          <Setter TargetName="CustomFilterTextBoxPanel"
                  Property="MaxHeight"
                  Value="800" />
        </DataTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </UserControl.Template>
</UserControl>







